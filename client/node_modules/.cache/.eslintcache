[{"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\index.js":"1","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\App.js":"2","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\ContextProvider\\Context.js":"3","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Header.js":"4","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Dashboard.js":"5","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Login.js":"6","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Error.js":"7","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Register.js":"8","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\PasswordReset.js":"9","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\ForgotPassword.js":"10","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Home.js":"11","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Contact.js":"12","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Adminboard.js":"13","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Appointment\\Appointment.js":"14","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Appointment\\AddEventModal.js":"15"},{"size":437,"mtime":1675022429847,"results":"16","hashOfConfig":"17"},{"size":2681,"mtime":1675026590892,"results":"18","hashOfConfig":"17"},{"size":374,"mtime":1674512173006,"results":"19","hashOfConfig":"17"},{"size":3930,"mtime":1675022293369,"results":"20","hashOfConfig":"17"},{"size":2591,"mtime":1675093522627,"results":"21","hashOfConfig":"17"},{"size":3984,"mtime":1674697701476,"results":"22","hashOfConfig":"17"},{"size":118,"mtime":1674509305119,"results":"23","hashOfConfig":"17"},{"size":5623,"mtime":1674751874047,"results":"24","hashOfConfig":"17"},{"size":1764,"mtime":1674619716040,"results":"25","hashOfConfig":"17"},{"size":2447,"mtime":1674685639416,"results":"26","hashOfConfig":"17"},{"size":474,"mtime":1675021849990,"results":"27","hashOfConfig":"17"},{"size":1376,"mtime":1674928900412,"results":"28","hashOfConfig":"17"},{"size":2107,"mtime":1674963294327,"results":"29","hashOfConfig":"17"},{"size":3181,"mtime":1675054693035,"results":"30","hashOfConfig":"17"},{"size":1176,"mtime":1675034714627,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2114fl",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\index.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\App.js",["81","82","83"],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\ContextProvider\\Context.js",[],[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Header.js",["84"],[],"import React, { Fragment, useContext } from 'react'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport \"./header.css\"\r\nimport { LoginContext } from './ContextProvider/Context';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { useNavigate , NavLink } from \"react-router-dom\"\r\n\r\nconst Header = () => {\r\n\r\n  const { logindata, setLoginData } = useContext(LoginContext);\r\n  console.log(logindata.ValidUserOne);\r\n\r\n  const history = useNavigate();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // Logout user\r\n\r\n    const logoutuser = async()=>{\r\n      // 로그아웃 로직 token을 비교해서 -> token 을 사라지게 한다.\r\n\r\n      let token = sessionStorage.getItem(\"usersdatatoken\");\r\n\r\n        const res = await fetch(\"/logout\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": token,\r\n                Accept: \"application/json\"\r\n            },\r\n            credentials: \"include\"\r\n        });\r\n\r\n        const data = await res.json();\r\n        //console.log(data);\r\n\r\n        if (data.status === 201) {\r\n            console.log(\"use logout\");\r\n            sessionStorage.removeItem(\"usersdatatoken\");\r\n            setLoginData(false)\r\n            history(\"/\");\r\n        } else {\r\n            console.log(\"error\");\r\n        }\r\n    }\r\n\r\n    const goDash = () => {\r\n      history('/dash');\r\n    }\r\n\r\n    const goError = () => {\r\n      history(\"*\");\r\n    }\r\n\r\n    const goHome = () => {\r\n      history('/');\r\n    }\r\n\r\n    const goAppointment = () => {\r\n      history('/appointment');\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n        <header>\r\n            <nav>\r\n                <h1 onClick={goHome}>Personal Trainer Web</h1>\r\n                <div className='avatar'>\r\n                  {\r\n                    logindata.ValidUserOne ? <Avatar style={{background: \"salmon\", fontWeight:\"bold\", textTransform:\"capitalize\"}} onClick={handleClick}>{logindata.ValidUserOne.fname[0].toUpperCase()}</Avatar>:\r\n                    <Avatar style={{background: \"blue\"}} onClick={handleClick}></Avatar>\r\n                  }\r\n                </div>\r\n\r\n                <Menu\r\n                        id=\"basic-menu\"\r\n                        anchorEl={anchorEl}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n\r\n                        {\r\n                          logindata.ValidUserOne ? (\r\n\r\n                            <>\r\n                              <MenuItem onClick={()=>{\r\n                                goDash()\r\n                                handleClose()}}>Profile</MenuItem>\r\n                                <MenuItem onClick={()=>{\r\n                                goAppointment()\r\n                                handleClose()\r\n                                }}>Appoinment</MenuItem>    \r\n                              <MenuItem onClick={()=>{\r\n                                logoutuser()\r\n                                handleClose()}}>Logout</MenuItem>\r\n                            </>\r\n\r\n                          ) : (\r\n                            <>\r\n                              <MenuItem onClick={()=>{\r\n                                goError()\r\n                                handleClose()\r\n                                }}>Please Log In</MenuItem>\r\n                            </>\r\n                            \r\n                          )\r\n                        }\r\n\r\n      </Menu>\r\n            </nav>\r\n        </header>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Dashboard.js",["85"],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Login.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Error.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Register.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\PasswordReset.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\ForgotPassword.js",["86"],[],"import React, {useState, useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst ForgotPassword = () => {\r\n\r\n  //URL 에 있는 id 와 token값을 가져오기 위해 useParams사용\r\n  const {id, token} = useParams();\r\n\r\n  const history = useNavigate();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n\r\n  const userValid = async()=>{\r\n    const res = await fetch(`/forgotpassword/${id}/${token}`, {\r\n      method: 'GET',\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if(data.status === 201){\r\n      console.log(\"user valid\");\r\n    }else{\r\n      history(\"*\")\r\n    }\r\n  }\r\n\r\n  const setval = (e) =>{\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  const sendpassword = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await fetch(`/${id}/${token}`, {\r\n      method: 'POST',\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({password})\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if(data.status === 201){\r\n      setPassword(\"\")\r\n      setMessage(true);\r\n      toast.success(\"Password updated successfully\")\r\n    }else {\r\n      toast.error(\"Token Expired generate new Link!!\")\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    userValid()\r\n    setTimeout(() => {\r\n    }, 3000)\r\n}, [])\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your New Password</h1>\r\n                    </div>\r\n\r\n                  \r\n                    <form>\r\n                     {message ? <p style={{ color: \"green\", fontWeight: \"bold\" }}>Password Succesfulyy Update </p> : \"\"}\r\n                        <div className=\"form_input\">\r\n                            <label htmlFor=\"password\">New Password</label>\r\n                            <input type=\"password\" value={password} onChange={setval} name=\"password\" id=\"password\" placeholder='Enter Your New Password' />\r\n                        </div>\r\n                        <button className='btn' onClick={sendpassword}>Send</button>\r\n                    </form>\r\n                    <ToastContainer />\r\n                </div>\r\n            </section>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Home.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Contact.js",[],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Adminboard.js",["87"],[],"import React, { useContext, useEffect ,useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LoginContext } from './ContextProvider/Context';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Adminboard = () => {\r\n  const [data, setData] = useState(false);\r\n\r\n  const { logindata, setLoginData } = useContext(LoginContext);\r\n  //console.log(logindata.ValidUserOne.email);\r\n   //useNavigate는 양식이 제출되거나 특정 event가 발생할 때,  url을 조작할 수 있는 interface를 제공합니다.\r\n  const history = useNavigate();\r\n\r\n  const AdminboardValid = async () => {\r\n    let token = sessionStorage.getItem(\"usersdatatoken\");\r\n\r\n    const res = await fetch(\"/validuser\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n        }\r\n    });\r\n      //가져온 response data를 json화 하여 data에 저장합니다.\r\n      const data = await res.json();\r\n      //console.log(data.ValidUserOne.role);\r\n\r\n      if(data.status === 401 || !data){\r\n        // => localStorage의 usersdatatoken을 가져와 확인하기 떄문에 만약 그것을 지우면 에러가 됨. \r\n        history(\"*\");\r\n      } else {\r\n        setLoginData(data)\r\n            history(\"/admin\");\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      AdminboardValid();\r\n        setData(true)\r\n    }, )\r\n}, [])\r\n\r\n  return (\r\n    <>\r\n    {\r\n        data ? <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <img src=\"./man.png\" style={{ width: \"200px\", marginTop: 20 }} alt=\"\" />\r\n            <h1>Admin Email:{logindata ? logindata.ValidUserOne.email : \"\"}</h1>\r\n            <h1>Admin Name:{logindata ? logindata.ValidUserOne.fname : \"\"}</h1>\r\n        </div> : <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", height: \"100vh\" }}>\r\n            Loading... &nbsp;\r\n            <CircularProgress />\r\n        </Box>\r\n    }\r\n\r\n</>\r\n  )\r\n}\r\n\r\nexport default Adminboard\r\n","C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Appointment\\Appointment.js",["88","89","90"],[],"C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\src\\components\\Appointment\\AddEventModal.js",[],[],{"ruleId":"91","severity":1,"message":"92","line":27,"column":11,"nodeType":"93","messageId":"94","endLine":27,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":30,"column":9,"nodeType":"93","messageId":"94","endLine":30,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":59,"column":6,"nodeType":"98","endLine":59,"endColumn":8,"suggestions":"99"},{"ruleId":"91","severity":1,"message":"100","line":7,"column":24,"nodeType":"93","messageId":"94","endLine":7,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":52,"column":4,"nodeType":"98","endLine":52,"endColumn":6,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":65,"column":4,"nodeType":"98","endLine":65,"endColumn":6,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"104","line":43,"column":4,"nodeType":"98","endLine":43,"endColumn":6,"suggestions":"105"},{"ruleId":"91","severity":1,"message":"106","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":14,"column":11,"nodeType":"93","messageId":"94","endLine":14,"endColumn":20},{"ruleId":"96","severity":1,"message":"107","line":62,"column":4,"nodeType":"98","endLine":62,"endColumn":6,"suggestions":"108"},"no-unused-vars","'logindata' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'DashboardValid'. Either include it or remove the dependency array.","ArrayExpression",["109"],"'NavLink' is defined but never used.",["110"],"React Hook useEffect has a missing dependency: 'userValid'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has a missing dependency: 'AdminboardValid'. Either include it or remove the dependency array.",["112"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AppointmentValid'. Either include it or remove the dependency array.",["113"],{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [DashboardValid]",{"range":"123","text":"124"},{"range":"125","text":"124"},"Update the dependencies array to be: [userValid]",{"range":"126","text":"127"},"Update the dependencies array to be: [AdminboardValid]",{"range":"128","text":"129"},"Update the dependencies array to be: [AppointmentValid]",{"range":"130","text":"131"},[1666,1668],"[DashboardValid]",[1626,1628],[1435,1437],"[userValid]",[1349,1351],"[AdminboardValid]",[1892,1894],"[AppointmentValid]"]