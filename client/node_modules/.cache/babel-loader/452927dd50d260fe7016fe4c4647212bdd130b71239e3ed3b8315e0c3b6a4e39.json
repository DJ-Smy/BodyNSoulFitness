{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Calendar } from '@fullcalendar/core';\nimport { CustomRenderingStore } from '@fullcalendar/core/internal';\nexport default class FullCalendar extends Component {\n  constructor() {\n    super(...arguments);\n    this.elRef = createRef();\n    this.needsCustomRenderingResize = false;\n    this.isInitialRender = true;\n    this.state = {\n      customRenderingMap: new Map()\n    };\n  }\n  render() {\n    const portalNodes = [];\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      const {\n        generatorMeta\n      } = customRendering;\n      const vnode = typeof generatorMeta === 'function' ? generatorMeta(customRendering.renderProps) : generatorMeta;\n      portalNodes.push(createPortal(vnode, customRendering.containerEl, customRendering.id));\n    }\n    return React.createElement(\"div\", {\n      ref: this.elRef\n    }, portalNodes);\n  }\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore();\n    this.calendar = new Calendar(this.elRef.current, Object.assign(Object.assign({}, this.props), {\n      handleCustomRendering: customRenderingStore.handle.bind(customRenderingStore),\n      customRenderingMetaMap: this.props\n    }));\n    this.calendar.render();\n    customRenderingStore.subscribe(customRenderingMap => {\n      if (this.isInitialRender) {\n        this.doCustomRendering(customRenderingMap);\n      } else {\n        this.requestCustomRendering(customRenderingMap);\n      }\n    });\n  }\n  requestCustomRendering(customRenderingMap) {\n    this.cancelCustomRendering();\n    this.customRenderingRequestId = requestAnimationFrame(() => {\n      FullCalendar.act(() => {\n        this.doCustomRendering(customRenderingMap);\n      });\n    });\n  }\n  doCustomRendering(customRenderingMap) {\n    this.needsCustomRenderingResize = true;\n    this.setState({\n      customRenderingMap\n    });\n  }\n  cancelCustomRendering() {\n    if (this.customRenderingRequestId) {\n      cancelAnimationFrame(this.customRenderingRequestId);\n      this.customRenderingRequestId = undefined;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    this.isInitialRender = false;\n    const updates = computeUpdates(prevProps, this.props);\n    if (Object.keys(updates).length) {\n      this.calendar.resetOptions(Object.assign(Object.assign({}, updates), {\n        customRenderingMetaMap: this.props\n      }), true);\n    }\n    if (this.needsCustomRenderingResize) {\n      this.needsCustomRenderingResize = false;\n      this.calendar.updateSize();\n    }\n  }\n  componentWillUnmount() {\n    this.calendar.destroy();\n    this.cancelCustomRendering();\n  }\n  getApi() {\n    return this.calendar;\n  }\n}\nFullCalendar.act = f => {\n  f();\n};\n// Utils\nfunction computeUpdates(origObj, newObj) {\n  const updates = {};\n  if (newObj !== origObj) {\n    for (const key in newObj) {\n      if (newObj[key] !== origObj[key]) {\n        updates[key] = newObj[key];\n      }\n    }\n  }\n  return updates;\n}","map":{"version":3,"mappings":"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","names":["React","Component","createRef","createPortal","Calendar","CustomRenderingStore","FullCalendar","constructor","customRenderingMap","Map","render","portalNodes","customRendering","state","values","generatorMeta","vnode","renderProps","push","containerEl","id","ref","elRef","componentDidMount","customRenderingStore","calendar","current","props","handleCustomRendering","handle","bind","customRenderingMetaMap","subscribe","isInitialRender","doCustomRendering","requestCustomRendering","cancelCustomRendering","customRenderingRequestId","requestAnimationFrame","act","needsCustomRenderingResize","setState","cancelAnimationFrame","undefined","componentDidUpdate","prevProps","updates","computeUpdates","Object","keys","length","resetOptions","updateSize","componentWillUnmount","destroy","getApi","f","origObj","newObj","key"],"sources":["C:\\Users\\ryang\\OneDrive\\Desktop\\New Folder\\capstone\\BodyNSoulFirness\\client\\node_modules\\@fullcalendar\\react\\src\\index.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { Component, createRef, ReactPortal } from 'react'\nimport { createPortal } from 'react-dom'\nimport {\n  CalendarOptions,\n  CalendarApi,\n  Calendar,\n} from '@fullcalendar/core'\nimport {\n  CustomRendering,\n  CustomRenderingStore,\n} from '@fullcalendar/core/internal'\n\ninterface CalendarState {\n  customRenderingMap: Map<string, CustomRendering<any>>\n}\n\nexport default class FullCalendar extends Component<CalendarOptions, CalendarState> {\n  static act = (f: () => void) => { f() }\n\n  private elRef = createRef<HTMLDivElement>()\n  private calendar: Calendar\n  private customRenderingRequestId: any\n  private needsCustomRenderingResize = false\n  private isInitialRender = true\n\n  state: CalendarState = {\n    customRenderingMap: new Map<string, CustomRendering<any>>()\n  }\n\n  render() {\n    const portalNodes: ReactPortal[] = []\n\n    for (const customRendering of this.state.customRenderingMap.values()) {\n      const { generatorMeta } = customRendering\n      const vnode = typeof generatorMeta === 'function' ?\n        generatorMeta(customRendering.renderProps) :\n        generatorMeta\n\n      portalNodes.push(\n        createPortal(\n          vnode,\n          customRendering.containerEl,\n          customRendering.id, // key\n        )\n      )\n    }\n\n    return (\n      <div ref={this.elRef}>\n        {portalNodes}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    const customRenderingStore = new CustomRenderingStore<unknown>()\n\n    this.calendar = new Calendar(this.elRef.current, {\n      ...this.props,\n      handleCustomRendering: customRenderingStore.handle.bind(customRenderingStore),\n      customRenderingMetaMap: this.props, // render functions are given as props\n    })\n\n    this.calendar.render()\n\n    customRenderingStore.subscribe((customRenderingMap) => {\n      if (this.isInitialRender) {\n        this.doCustomRendering(customRenderingMap)\n      } else {\n        this.requestCustomRendering(customRenderingMap)\n      }\n    })\n  }\n\n  requestCustomRendering(customRenderingMap) {\n    this.cancelCustomRendering()\n    this.customRenderingRequestId = requestAnimationFrame(() => {\n      FullCalendar.act(() => {\n        this.doCustomRendering(customRenderingMap)\n      })\n    })\n  }\n\n  doCustomRendering(customRenderingMap) {\n    this.needsCustomRenderingResize = true\n    this.setState({ customRenderingMap })\n  }\n\n  cancelCustomRendering() {\n    if (this.customRenderingRequestId) {\n      cancelAnimationFrame(this.customRenderingRequestId)\n      this.customRenderingRequestId = undefined\n    }\n  }\n\n  componentDidUpdate(prevProps: CalendarOptions) {\n    this.isInitialRender = false\n\n    const updates = computeUpdates(prevProps, this.props)\n\n    if (Object.keys(updates).length) {\n      this.calendar.resetOptions({\n        ...updates,\n        customRenderingMetaMap: this.props,\n      }, true)\n    }\n\n    if (this.needsCustomRenderingResize) {\n      this.needsCustomRenderingResize = false\n      this.calendar.updateSize()\n    }\n  }\n\n  componentWillUnmount() {\n    this.calendar.destroy()\n    this.cancelCustomRendering()\n  }\n\n  getApi(): CalendarApi {\n    return this.calendar\n  }\n}\n\n// Utils\n\nfunction computeUpdates(origObj: any, newObj: any): any {\n  const updates: any = {}\n\n  if (newObj !== origObj) {\n    for (const key in newObj) {\n      if (newObj[key] !== origObj[key]) {\n        updates[key] = newObj[key]\n      }\n    }\n  }\n\n  return updates\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}