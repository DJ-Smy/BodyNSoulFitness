{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryang\\\\OneDrive\\\\Desktop\\\\selfMern\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport { Routes, Route } from 'react-router-dom';\nimport Register from './components/Resister';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport Error from './components/Error';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    logindata,\n    setLoginData\n  } = useContext(LoginContext);\n  //console.log(logindata.ValidUserOne.email);\n  //useNavigate는 양식이 제출되거나 특정 event가 발생할 때,  url을 조작할 수 있는 interface를 제공합니다.\n  const history = useNavigate();\n  const DashboardValid = async () => {\n    let token = localStorage.getItem(\"usersdatatoken\");\n    const res = await fetch(\"/validuser\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n\n    //가져온 response data를 json화 하여 data에 저장합니다.\n    const data = await res.json();\n    //console.log(data);\n\n    if (data.status === 401 || !data) {\n      console.log(\"error page redirect\"); // => localStorage의 usersdatatoken을 가져와 확인하기 떄문에 만약 그것을 지우면 에러가 됨. \n      history(\"*\");\n    } else {\n      //즉 이곳은 user 가 웹사이트에 로그인 되어있고 뿐만아니라 verify 됬다는것을 의미 하여 setLoginData를 사용하여 현재의 logindata <- data를 집어넣어 줍니다.\n      console.log(\"user verify\");\n      setLoginData(data);\n      history(\"/dash\");\n    }\n  };\n  useEffect(() => {\n    DashboardValid();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dash\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UPLQPE5ItUUxzpgaaZvl/XLw2rw=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","Header","Login","Routes","Route","Register","Home","Dashboard","Error","CircularProgress","Box","App","logindata","setLoginData","useContext","LoginContext","history","useNavigate","DashboardValid","token","localStorage","getItem","res","fetch","method","headers","data","json","status","console","log"],"sources":["C:/Users/ryang/OneDrive/Desktop/selfMern/client/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Header from './components/Header';\nimport Login from './components/Login';\nimport {Routes, Route} from 'react-router-dom';\nimport Register from './components/Resister';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport Error from './components/Error';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\n\n\n\nfunction App() {\n\n  const { logindata, setLoginData } = useContext(LoginContext);\n  //console.log(logindata.ValidUserOne.email);\n   //useNavigate는 양식이 제출되거나 특정 event가 발생할 때,  url을 조작할 수 있는 interface를 제공합니다.\n  const history = useNavigate();\n\n  const DashboardValid = async () => {\n    let token = localStorage.getItem(\"usersdatatoken\");\n\n    const res = await fetch(\"/validuser\", {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": token\n        }\n    });\n\n      //가져온 response data를 json화 하여 data에 저장합니다.\n      const data = await res.json();\n      //console.log(data);\n\n      if(data.status === 401 || !data){\n        console.log(\"error page redirect\")// => localStorage의 usersdatatoken을 가져와 확인하기 떄문에 만약 그것을 지우면 에러가 됨. \n        history(\"*\");\n      }else{\n        //즉 이곳은 user 가 웹사이트에 로그인 되어있고 뿐만아니라 verify 됬다는것을 의미 하여 setLoginData를 사용하여 현재의 logindata <- data를 집어넣어 줍니다.\n        console.log(\"user verify\");\n            setLoginData(data)\n            history(\"/dash\");\n      }\n  }\n\n  useEffect(() => {\n    DashboardValid();\n  }, [])\n\n  return (\n    <Fragment>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/dash\" element={<Dashboard />} />\n        <Route path=\"*\" element={<Error />} />\n      </Routes>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAAQC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,GAAG,MAAM,mBAAmB;AAAC;AAKpC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGC,UAAU,CAACC,YAAY,CAAC;EAC5D;EACC;EACD,MAAMC,OAAO,GAAGC,WAAW,EAAE;EAE7B,MAAMC,cAAc,GAAG,YAAY;IACjC,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAElD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MAClCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEN;MACrB;IACJ,CAAC,CAAC;;IAEA;IACA,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;IAC7B;;IAEA,IAAGD,IAAI,CAACE,MAAM,KAAK,GAAG,IAAI,CAACF,IAAI,EAAC;MAC9BG,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCd,OAAO,CAAC,GAAG,CAAC;IACd,CAAC,MAAI;MACH;MACAa,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MACtBjB,YAAY,CAACa,IAAI,CAAC;MAClBV,OAAO,CAAC,OAAO,CAAC;IACtB;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdkB,cAAc,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACjD,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3C,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9C,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEf;AAAC,GAjDQP,GAAG;AAAA,KAAHA,GAAG;AAmDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}