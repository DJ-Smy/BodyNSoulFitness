{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryang\\\\OneDrive\\\\Desktop\\\\New Folder\\\\capstone\\\\BodyNSoulFirness\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { LoginContext } from './ContextProvider/Context';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [data, setData] = useState(false);\n  const {\n    logindata,\n    setLoginData\n  } = useContext(LoginContext);\n  //console.log(logindata.ValidUserOne.email);\n  //useNavigate는 양식이 제출되거나 특정 event가 발생할 때,  url을 조작할 수 있는 interface를 제공합니다.\n  const history = useNavigate();\n  const DashboardValid = async () => {\n    let token = sessionStorage.getItem(\"usersdatatoken\");\n    const res = await fetch(\"/validuser\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    //가져온 response data를 json화 하여 data에 저장합니다.\n    const data = await res.json();\n    //console.log(data);\n\n    if (data.status === 401 || !data) {\n      // => localStorage의 usersdatatoken을 가져와 확인하기 떄문에 만약 그것을 지우면 에러가 됨. \n      history(\"*\");\n    } else {\n      //즉 이곳은 user 가 웹사이트에 로그인 되어있고 뿐만아니라 verify 됬다는것을 의미 하여 setLoginData를 사용하여 현재의 logindata <- data를 집어넣어 줍니다.\n      //console.log(\"user verify\");\n      setLoginData(data);\n      history(\"/dash\");\n    }\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      DashboardValid();\n      setData(true);\n    }, 2000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./man.png\",\n        style: {\n          width: \"200px\",\n          marginTop: 20\n        },\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"User Email:\", logindata ? logindata.ValidUserOne.email : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"User Name:\", logindata ? logindata.ValidUserOne.fname : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\"\n      },\n      children: [\"Loading... \\xA0\", /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboard, \"QFvrrkzi/rI2u//RhpBw+nnP57s=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useNavigate","LoginContext","CircularProgress","Box","Dashboard","data","setData","logindata","setLoginData","history","DashboardValid","token","sessionStorage","getItem","res","fetch","method","headers","json","status","setTimeout","display","flexDirection","alignItems","width","marginTop","ValidUserOne","email","fname","justifyContent","height"],"sources":["C:/Users/ryang/OneDrive/Desktop/New Folder/capstone/BodyNSoulFirness/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext, useEffect ,useState} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { LoginContext } from './ContextProvider/Context';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Dashboard = () => {\r\n\r\n  const [data, setData] = useState(false);\r\n\r\n  const { logindata, setLoginData } = useContext(LoginContext);\r\n  //console.log(logindata.ValidUserOne.email);\r\n   //useNavigate는 양식이 제출되거나 특정 event가 발생할 때,  url을 조작할 수 있는 interface를 제공합니다.\r\n  const history = useNavigate();\r\n\r\n  const DashboardValid = async () => {\r\n    let token = sessionStorage.getItem(\"usersdatatoken\");\r\n\r\n    const res = await fetch(\"/validuser\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": token\r\n        }\r\n    });\r\n      //가져온 response data를 json화 하여 data에 저장합니다.\r\n      const data = await res.json();\r\n      //console.log(data);\r\n\r\n      if(data.status === 401 || !data){\r\n        // => localStorage의 usersdatatoken을 가져와 확인하기 떄문에 만약 그것을 지우면 에러가 됨. \r\n        history(\"*\");\r\n      }else{\r\n        //즉 이곳은 user 가 웹사이트에 로그인 되어있고 뿐만아니라 verify 됬다는것을 의미 하여 setLoginData를 사용하여 현재의 logindata <- data를 집어넣어 줍니다.\r\n      //console.log(\"user verify\");\r\n            setLoginData(data)\r\n            history(\"/dash\");\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n        DashboardValid();\r\n        setData(true)\r\n    }, 2000)\r\n\r\n}, [])\r\n  return (\r\n    <>\r\n    {\r\n        data ? <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n            <img src=\"./man.png\" style={{ width: \"200px\", marginTop: 20 }} alt=\"\" />\r\n            <h1>User Email:{logindata ? logindata.ValidUserOne.email : \"\"}</h1>\r\n            <h1>User Name:{logindata ? logindata.ValidUserOne.fname : \"\"}</h1>\r\n        </div> : <Box sx={{ display: 'flex', justifyContent: \"center\", alignItems: \"center\", height: \"100vh\" }}>\r\n            Loading... &nbsp;\r\n            <CircularProgress />\r\n        </Box>\r\n    }\r\n\r\n</>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,2BAA2B;AACxD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,GAAG,MAAM,mBAAmB;AAAC;AAAA;AAEpC,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAM;IAAEQ,SAAS;IAAEC;EAAa,CAAC,GAAGX,UAAU,CAACI,YAAY,CAAC;EAC5D;EACC;EACD,MAAMQ,OAAO,GAAGT,WAAW,EAAE;EAE7B,MAAMU,cAAc,GAAG,YAAY;IACjC,IAAIC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAEpD,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MAClCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEN;MACrB;IACJ,CAAC,CAAC;IACA;IACA,MAAMN,IAAI,GAAG,MAAMS,GAAG,CAACI,IAAI,EAAE;IAC7B;;IAEA,IAAGb,IAAI,CAACc,MAAM,KAAK,GAAG,IAAI,CAACd,IAAI,EAAC;MAC9B;MACAI,OAAO,CAAC,GAAG,CAAC;IACd,CAAC,MAAI;MACH;MACF;MACMD,YAAY,CAACH,IAAI,CAAC;MAClBI,OAAO,CAAC,OAAO,CAAC;IACtB;EACJ,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdsB,UAAU,CAAC,MAAM;MACbV,cAAc,EAAE;MAChBJ,OAAO,CAAC,IAAI,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC;EAEZ,CAAC,EAAE,EAAE,CAAC;EACJ,oBACE;IAAA,UAEID,IAAI,gBAAG;MAAK,KAAK,EAAE;QAAEgB,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA,wBAClF;QAAK,GAAG,EAAC,WAAW;QAAC,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAG,CAAE;QAAC,GAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACxE;QAAA,WAAI,aAAW,EAAClB,SAAS,GAAGA,SAAS,CAACmB,YAAY,CAACC,KAAK,GAAG,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACnE;QAAA,WAAI,YAAU,EAACpB,SAAS,GAAGA,SAAS,CAACmB,YAAY,CAACE,KAAK,GAAG,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAChE,gBAAG,QAAC,GAAG;MAAC,EAAE,EAAE;QAAEP,OAAO,EAAE,MAAM;QAAEQ,cAAc,EAAE,QAAQ;QAAEN,UAAU,EAAE,QAAQ;QAAEO,MAAM,EAAE;MAAQ,CAAE;MAAA,WAAC,iBAEpG,uBAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB,iBAGX;AAEH,CAAC;AAAA,GAxDK1B,SAAS;EAAA,QAOGJ,WAAW;AAAA;AAAA,KAPvBI,SAAS;AA0Df,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}