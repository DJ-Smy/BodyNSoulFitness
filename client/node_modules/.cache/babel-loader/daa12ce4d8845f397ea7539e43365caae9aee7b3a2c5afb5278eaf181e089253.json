{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryang\\\\OneDrive\\\\Desktop\\\\New Folder\\\\capstone\\\\BodyNSoulFirness\\\\client\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  //URL 에 있는 id 와 token값을 가져오기 위해 useParams사용\n  const {\n    id,\n    token\n  } = useParams();\n  const history = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [massage, setMessage] = useState(\"\");\n  const userValid = async () => {\n    const res = await fetch(`/forgotpassword/${id}/${token}`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      console.log(\"user valid\");\n    } else {\n      history(\"*\");\n    }\n  };\n  const setval = e => {\n    setPassword(e.target.value);\n  };\n  const sendpassword = async e => {\n    e.preventDefault();\n    const res = await fetch(`/${id}/${token}`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password\n      })\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      setPassword(\"\");\n      setMessage(true);\n    } else {\n      toast.error(\"Token Expired generate new Link!!\");\n    }\n  };\n  useEffect(() => {\n    userValid();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Enter Your New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: password,\n              onChange: setval,\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Enter Your New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: sendpassword,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ForgotPassword, \"1rFrlh52eQepEWU2t0IAGXy6mog=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","ToastContainer","toast","ForgotPassword","id","token","history","password","setPassword","massage","setMessage","userValid","res","fetch","method","headers","data","json","status","console","log","setval","e","target","value","sendpassword","preventDefault","body","JSON","stringify","error"],"sources":["C:/Users/ryang/OneDrive/Desktop/New Folder/capstone/BodyNSoulFirness/client/src/components/ForgotPassword.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst ForgotPassword = () => {\r\n\r\n  //URL 에 있는 id 와 token값을 가져오기 위해 useParams사용\r\n  const {id, token} = useParams();\r\n\r\n  const history = useNavigate();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [massage, setMessage] = useState(\"\");\r\n\r\n\r\n  const userValid = async()=>{\r\n    const res = await fetch(`/forgotpassword/${id}/${token}`, {\r\n      method: 'GET',\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if(data.status === 201){\r\n      console.log(\"user valid\");\r\n    }else{\r\n      history(\"*\")\r\n    }\r\n  }\r\n\r\n  const setval = (e) =>{\r\n    setPassword(e.target.value);\r\n  }\r\n\r\n  const sendpassword = async(e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await fetch(`/${id}/${token}`, {\r\n      method: 'POST',\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({password})\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    if(data.status === 201){\r\n      setPassword(\"\")\r\n      setMessage(true);\r\n    }else {\r\n      toast.error(\"Token Expired generate new Link!!\")\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    userValid()\r\n    }, [])\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your New Password</h1>\r\n                    </div>\r\n\r\n                  \r\n                    <form>\r\n                        <div className=\"form_input\">\r\n                            <label htmlFor=\"password\">New Password</label>\r\n                            <input type=\"password\" value={password} onChange={setval} name=\"password\" id=\"password\" placeholder='Enter Your New Password' />\r\n                        </div>\r\n                        <button className='btn' onClick={sendpassword}>Send</button>\r\n                    </form>\r\n                    <ToastContainer />\r\n                </div>\r\n            </section>\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}