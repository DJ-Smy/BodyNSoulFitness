{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryang\\\\OneDrive\\\\Desktop\\\\New Folder\\\\capstone\\\\BodyNSoulFirness\\\\client\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const setVal = e => {\n    setEmail(e.target.value);\n  };\n  const sendLink = async e => {\n    e.preventDefault();\n    const res = await fetch(\"/sendpasswordlink\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const data = await res.json();\n    if (data.status === 201) {\n      setEmail(\"\");\n      setMessage(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form_data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Enter Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"green\",\n            fontWeight: \"bold\"\n          },\n          children: \"password reset link send successfully in your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 32\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form_input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: email,\n              onChange: setVal,\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Enter Your Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: sendLink,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(PasswordReset, \"tgSpMP9vfF6GNBbNf9NcNEW5Oz0=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","PasswordReset","email","setEmail","message","setMessage","setVal","e","target","value","sendLink","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","color","fontWeight"],"sources":["C:/Users/ryang/OneDrive/Desktop/New Folder/capstone/BodyNSoulFirness/client/src/components/PasswordReset.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst PasswordReset = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const setVal  = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const sendLink = async(e) => {\r\n        e.preventDefault();\r\n\r\n        const res = await fetch(\"/sendpasswordlink\", {\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({email})\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        if(data.status === 201){\r\n            setEmail(\"\");\r\n            setMessage(true);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <>\r\n            <section>\r\n                <div className=\"form_data\">\r\n                    <div className=\"form_heading\">\r\n                        <h1>Enter Your Email</h1>\r\n                    </div>\r\n\r\n                    {message ? <p style={{color: \"green\", fontWeight: \"bold\"}}>password reset link send successfully in your Email</p>:\"\"}\r\n                    <form>\r\n                        <div className=\"form_input\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" value={email} onChange={setVal} name=\"email\" id=\"email\" placeholder='Enter Your Email Address' />\r\n                        </div>\r\n                        <button className='btn' onClick={sendLink}>Send</button>\r\n                    </form>\r\n                    <ToastContainer />\r\n                </div>\r\n            </section>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default PasswordReset\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AAAC;AAAA;AAEvD,MAAMC,aAAa,GAAG,MAAM;EAAA;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,MAAM,GAAKC,CAAC,IAAK;IACnBJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAMH,CAAC,IAAK;IACzBA,CAAC,CAACI,cAAc,EAAE;IAElB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAC;QACJ,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAChB;MAAK,CAAC;IAChC,CAAC,CAAC;IAEF,MAAMiB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;IAE7B,IAAGD,IAAI,CAACE,MAAM,KAAK,GAAG,EAAC;MACnBlB,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,IAAI,CAAC;IACpB;EAIJ,CAAC;EAGH,oBACE;IAAA,uBACQ;MAAA,uBACI;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAK,SAAS,EAAC,cAAc;UAAA,uBACzB;YAAA,UAAI;UAAgB;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QACvB,EAELD,OAAO,gBAAG;UAAG,KAAK,EAAE;YAACkB,KAAK,EAAE,OAAO;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAA,UAAC;QAAmD;UAAA;UAAA;UAAA;QAAA,QAAI,GAAC,EAAE,eACrH;UAAA,wBACI;YAAK,SAAS,EAAC,YAAY;YAAA,wBACvB;cAAO,OAAO,EAAC,OAAO;cAAA,UAAC;YAAK;cAAA;cAAA;cAAA;YAAA,QAAQ,eACpC;cAAO,IAAI,EAAC,OAAO;cAAC,KAAK,EAAErB,KAAM;cAAC,QAAQ,EAAEI,MAAO;cAAC,IAAI,EAAC,OAAO;cAAC,EAAE,EAAC,OAAO;cAAC,WAAW,EAAC;YAA0B;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA;YAAA;YAAA;YAAA;UAAA,QACnH,eACN;YAAQ,SAAS,EAAC,KAAK;YAAC,OAAO,EAAEI,QAAS;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA,QACrD,eACP,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAChB;MAAA;MAAA;MAAA;IAAA;EACA,iBACX;AAEX,CAAC;AAAA,GAtDKT,aAAa;AAAA,KAAbA,aAAa;AAwDnB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}